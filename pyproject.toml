[project]
name = "matrixctl"
version = "0.12.0"
description = "Control, manage, provision and deploy matrix homeservers."
authors = [{ name = "Michael Sasser", email = "Michael@MichaelSasser.org" }]
maintainers = [{ name = "Michael Sasser", email = "Michael@MichaelSasser.org" }]
readme = "README.md"
keywords = ["Matrix", "Synapse", "Docker"]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Customer Service",
  "Intended Audience :: Developers",
  "Intended Audience :: Other Audience",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Natural Language :: English",
  "Operating System :: POSIX",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Utilities",
  "Typing :: Typed",
]

dependencies = [
  "GitPython>=3.1.43,<4.0.0",
  "coloredlogs>=15.0.1,<16.0.0",
  "paramiko>=3.4.0,<4.0.0",
  "ruamel.yaml>=0.18.6",
  "ansible-runner>=2.4.0,<3.0.0",
  "attrs>=23.2.0",
  "xdg>=6.0.0,<7.0.0",
  "Jinja2>=3.1.4,<4.0.0",
  "psycopg>=3.1.19,<4.0.0",
  "httpx[http2]>=0.27.2",
  "sshtunnel>=0.4.0,<0.5.0",
  "rich>=13.8.0,<14.0.0",
]

requires-python = ">=3.10,<4.0"

[project.urls]
Homepage = "https://michaelsasser.github.io/matrixctl/index.html"
Documentation = "https://michaelsasser.github.io/matrixctl/index.html"
Repository = "https://github.com/MichaelSasser/matrixctl"
Issues = "https://github.com/MichaelSasser/matrixctl/issues"
Changelog = "https://github.com/MichaelSasser/matrixctl/blob/master/CHANGELOG.rst"

[tool.rye]
managed = true
universal = true
generate-hashes = true
dev-dependencies = [
  "towncrier>=24.8.0",
  "vulture>=2.12",
  "mypy>=1.11.2",
  "interrogate>=1.7.0",
  "types-setuptools>=75.1.0.20240917",
  "types-paramiko>=3.4.0.20240423,<4.0.0.0",
  "types-attrs>=19.1.0,<20.0.0",
  "types-Jinja2>=2.11.9,<3.0.0",
  "ruff>=0.6.8",
  "pytest>=8.3.3",
  "coverage>=7.6.1",
  "tox>=4.20.0",
  "pre-commit>=3.8.0",
  "sphinx>=6.1.3,<8.0.0",
  "sphinx-autodoc-typehints>=1.2.2,<3.0",
  "sphinxcontrib-programoutput>=0.17",
  "numpydoc>=1.5.0",
  "sphinx-rtd-theme>=1.2,<3.0",
  "basedpyright>=1.18.2",
]

[tool.rye.scripts]
# Application entry points
matrixctl = { call = "matrixctl.__main__:main" }

# Linting
check = { chain = ["check:lint", "check:fmt"] }
"check:lint" = "rye lint"
"check:fmt" = "rye fmt --check"
"check:type" = "rye run basedpyright"

fix = { chain = ["fix:lint", "fix:fmt"] }
"fix:lint" = "rye lint --fix"
"fix:fmt" = "rye fmt"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/matrixctl"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 79
cache-dir = "~/.cache/ruff"
fix = true
src = ["matrixctl", "docs"]
show-fixes = true
target-version = "py310"

exclude = [
  ".git",
  ".mypy_cache",
  ".nox",
  ".pytype",
  ".ruff_cache",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "venv",
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
task-tags = ["TODO", "FIXME", "WARN", "SEC", "SECURITY", "INFO", "NOTE"]
ignore = [
  "D202",
  "D203",
  "TCH003",
  "TCH001",
  "ANN401",
  "ANN101",
  "T201",    # Print statements
  "TD002",   # Missing TODO author
  "TD003",   # Missing TODO issue link
  "FIX002",  # Unresolved TODO
  "PERF203", # Try/except in loop
  "COM812",
  "ISC001",
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
suppress-dummy-args = true
# suppress-none-returning = true

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-copyright]
author = "Michael Sasser <Michael@MichaelSasser.org>"
min-file-size = 512

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["typing"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"typing" = "t"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2
constants = ["__version__"]
forced-separate = ["tests", "matrixctl"]
required-imports = ["from __future__ import annotations"]
known-first-party = ["matrixctl"]
lines-between-types = 1
known-third-party = [
  "pytest",
  "paramiko",
  "argcomplete",
  "coloredlogs",
  "sphinx_rtd_theme",
  "git",
  "httpx",
  "attr",
  "ansible_runner",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]
"docs/*" = ["INP001"]


[tool.mypy]
python_version = "3.11"
platform = "linux"
ignore_missing_imports = true
strict_equality = true
strict = true
show_traceback = true
# CI output differs from local
warn_unused_ignores = false # workaround see PR: 308

[[tool.mypy.overrides]]
module = "tests.matrixctl.handlers.*"
allow_untyped_decorators = true       # pytest fixtures


[tool.pyright]
include = ["src/matrixctl", "tests"]
exclude = ["**/__pycache__"]

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.11"
pythonPlatform = "Linux"
typeCheckingMode = "basic"

# reportUnknownVariableType ="none"
# reportUnknownMemberType ="none"
# reportUnknownParameterType = "none"
# reportUnknownArgumentType = "none"
# reportUnknownLambdaType = "none"


[tool.pycln]
all = true

[tool.flake8]
max-line-length = 79
# max-complexity = 12
ignore = "E501"
select = "C,E,F,W,B,B901"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
# ignore-semiprivate = false
# ignore-private = false
# ignore-property-decorators = false
# ignore-module = false
fail-under = 100
exclude = ["setup.py", "docs", "build"]
# ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# ignore-regex see: https://github.com/econchick/interrogate/issues?q=is%3Aissue+overload
ignore-regex = ["request", "exec_async_request"]
verbose = 1
# quiet = false
# whitelist-regex = []
# color = true


[tool.vulture]
make_whitelist = true
min_confidence = 80
paths = ["src/matrixctl"]
sort_by_size = true

[tool.coverage.report]
exclude_also = ["@t.overload", "pragma: no cover"]


[tool.towncrier]
package = "matrixctl"
package_dir = "matrixctl"
filename = "CHANGELOG.rst"
issue_format = "`#{issue} <https://github.com/MichaelSasser/matrixctl/issues/{issue}>`_"
directory = "news/"
top_line = false
# title_format = "{version} ({project_date})"  # {name}
all_bullets = true                      # make all fragments bullet points
wrap = true                             # Wrap text to 79 characters
template = "news/templates/default.rst"

[[tool.towncrier.type]]
directory = "breaking"
name = "Behavior & Breaking Changes"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features & Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Removals & Deprecations"
showcontent = true

[[tool.towncrier.type]]
directory = "trivial"
name = "Trivial Changes"
showcontent = false

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous"
showcontent = true


[tool.tox]
legacy_tox_ini = """
[pytest]

addopts = -ra
testpaths = tests
xfail_strict = true
filterwarnings =
    once::Warning
    ignore:::pympler[.*]


# Keep docs in sync with docs env and .readthedocs.yml.
# [gh-actions]
# python =
#     3.10: py39, precommit, changelog, docs
# # 3.10: py310


[tox]
rye_discovery = true
envlist = precommit,py310,py311,py312,docs,changelog,
isolated_build = True

[coverage:report]
exclude_also =
    @t.overload
    pragma: no cover

[testenv]
allowlist_externals = rye
# Prevent random setuptools/pip breakages like
# https://github.com/pypa/setuptools/issues/1042 from breaking our builds.
setenv =
    VIRTUALENV_NO_DOWNLOAD=1
extras = {env:TOX_AP_TEST_EXTRAS:tests}
commands =
  rye sync
  rye run coverage run -m pytest --doctest-modules {posargs}

[testenv:precommit]
allowlist_externals = rye
basepython = python3.12
skip_install = true
deps =
    pre-commit
passenv = HOMEPATH  # needed on Windows
commands =
  rye sync
  rye run pre-commit run --all-files


[testenv:docs]
allowlist_externals = rye
# Keep basepython in sync with gh-actions and .readthedocs.yml.
basepython = python3.12
# extras = docs, func
# currently disable -n
commands =
  rye sync
  rye run sphinx-build -T -W -b html -d {envtmpdir}/doctrees docs/source docs/build/html


[testenv:changelog]
allowlist_externals = rye
basepython = python3.12
# deps = towncrier
skip_install = true
commands =
  rye sync
  rye run towncrier --draft
"""
