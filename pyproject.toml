[tool.poetry]
name = "matrixctl"
version = "0.12.0-beta.1"
description = "Control, manage, provision and deploy matrix homeservers."

license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/MichaelSasser/matrixctl"
homepage = "https://michaelsasser.github.io/matrixctl/index.html"
documentation = "https://michaelsasser.github.io/matrixctl/index.html"
keywords = ['Matrix', 'Synapse', 'Docker', 'OCI-Container']
authors = ["Michael Sasser <Michael@MichaelSasser.org>"]
maintainers = ["Michael Sasser <Michael@MichaelSasser.org>"]
# Look here for all Classifiers:
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Customer Service",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Utilities",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.9"
GitPython = "^3.1.20"
coloredlogs = "^15.0.1"
paramiko = "^2.7.2"
"ruamel.yaml" = "^0.17.10"
ansible-runner = ">=1.4.7,<3.0.0"
attrs = "^21.2.0"
xdg = "^5.1.0"
Jinja2 = "^3.0.1"
sshtunnel = "^0.4.0"
psycopg = "^3.0.5"
httpx = { version = ">=0.20,<0.22", extras = ["http2"] }

# Optional:
sphinx = { version = ">=3.5.1,<5.0.0", optional = true }
sphinx-autodoc-typehints = { version = "^1.12.0", optional = true }
sphinxcontrib-programoutput = { version = ">=0.16,<0.18", optional = true }
numpydoc = { version = "^1.1.0", optional = true }
sphinx_rtd_theme = { version = "^1.0.0", optional = true }

[tool.poetry.extras]
docs = ["sphinx", "sphinx_rtd_theme", "sphinx-autodoc-typehints", "numpydoc", "sphinxcontrib-programoutput"]

[tool.poetry.dev-dependencies]
pre-commit = "^2.14.0"
nox = "^2021.10.1"
towncrier = "^21.3.0"

# typesheds
types-pkg-resources = "^0.1.3"
types-paramiko = "^2.8.2"
types-attrs = "^19.1.0"
types-Jinja2 = "^2.11.9"

[tool.poetry.scripts]
matrixctl = "matrixctl.__main__:main"

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.github
  | \.tox
  | \.nox
  | \.venv
  | \.news
  | __pycache__
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.mypy]
python_version = 3.9
platform = "linux"
ignore_missing_imports = true
strict_equality = true
strict = true
show_traceback = true
# CI output differs from local
warn_unused_ignores = false  # workaround see PR: 308

[[tool.mypy.overrides]]
module = ["tests.matrixctl.handlers.*", "noxfile"]
disallow_untyped_decorators = false  # pytest fixtures

[tool.pyright]
include = ["matrixctl", "tests"]
exclude = ["**/__pycache__"]

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = "3.9"
pythonPlatform = "Linux"
typeCheckingMode = "basic"

[tool.isort]
line_length = 79
force_single_line = true
atomic = true
float_to_top = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
use_parentheses = true
skip_glob = ["*/setup.py", "*.rst", "*.md", "*.yaml", "*.txt", "*.yml", "*.lock", "*.toml", "*.ini", "Makefile", "docs/source/conf.py"]
filter_files = true
known_first_party = "matrixctl"
known_third_party = [
    "pytest",
    "paramiko",
    "argcomplete",
    "coloredlogs",
    "sphinx_rtd_theme",
    "git",
    "ruamel",
    "xdg",
    "httpx",
    "attr",
    "jinja2",
    "sshtunnel",
    "psycopg",
    "nox",
    "ansible_runner",
]

[tool.pycln]
all = true

[tool.flake8]
max-line-length = 79
ignore = "E501"
select = "C,E,F,W,B,B901"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
fail-under = 100
exclude = ["setup.py", "docs", "build"]
verbose = 1


[tool.vulture]
make_whitelist = true
min_confidence = 80
paths = ["matrixctl"]
sort_by_size = true

[tool.towncrier]
package = "matrixctl"
package_dir = "matrixctl"
filename = "CHANGELOG.rst"
issue_format = "`#{issue} <https://github.com/MichaelSasser/matrixctl/issues/{issue}>`_"
directory = "news/"
top_line = false
all_bullets = true  # make all fragments bullet points
wrap = true  # Wrap text to 79 characters
template = "news/templates/default.rst"

  [[tool.towncrier.type]]
  directory = "breaking"
  name = "Behavior & Breaking Changes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "feature"
  name = "Features & Improvements"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "bugfix"
  name = "Bugfixes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "docs"
  name = "Improved Documentation"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "removal"
  name = "Removals & Deprecations"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "trivial"
  name = "Trivial Changes"
  showcontent = false

  [[tool.towncrier.type]]
  directory = "misc"
  name = "Miscellaneous"
  showcontent = true

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
