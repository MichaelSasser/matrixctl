[tool.poetry]
name = "matrixctl"
version = "0.6.3"
description = "Controls a synapse oci-container instance via ansible"
license = "GPL-3.0+"
readme = "README.md"
repository = "https://github.com/MichaelSasser/matrixctl"
homepage = "https://michaelsasser.github.io/matrixctl/index.html"
documentation = "https://michaelsasser.github.io/matrixctl/index.html"
keywords = ['Matrix', 'Synapse', 'Docker', 'OCI-Container']
authors = ["Michael Sasser <Michael@MichaelSasser.org>"]
# Look here for all Classifiers:
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "Topic :: Communications",
    "Environment :: Console",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"
]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.23.0"
GitPython = "^3.1.0"
coloredlogs = "^14.0"
argcomplete = "^1.11.1"
tabulate = "^0.8.7"
paramiko = "^2.7.1"
sphinx = { version = "^3.0", optional = true }
sphinx_rtd_theme = { version = "^0.4.3", optional = true  }
sphinx-autodoc-typehints = { version = "^1.10", optional = true }
sphinxcontrib-programoutput = { version = "^0.16", optional = true }
toml = "^0.10.0"

[tool.poetry.extras]
docs = ["sphinx", "sphinx_rtd_theme", "sphinx-autodoc-typehints", "sphinxcontrib-programoutput"]

[tool.poetry.dev-dependencies]
pre-commit = "^2.2.0"
pytest = "^5"
flake8 = "^3.8.2"
# flake8 = { git = "https://gitlab.com/pycqa/flake8", branch = "master" }
neovim = "^0.3.1"
pydocstyle = "^5.0"
pylint = "^2.4"
pycodestyle = "^2.6"
yapf = "^0.30.0"
vulture = "^1.4"
mypy = "^0.770"
python-language-server = {version = "^0.33.0", extras = ["all"]}
black = { version = "*", allow-prereleases = true }
isort = {version = "^4.3.21", extras = ["pyproject"]}
flake8-bugbear = "^20.1.4"

[tool.poetry.scripts]
matrixctl = "matrixctl.application:main"

[tool.black]
line-length = 79
include = '\.pyi?$'
# exclude __init__.py because of ordered importing
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''


[tool.isort]
line_length = 79
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
use_parentheses = true
not_skip = "__init__.py"
skip_glob = ["*/setup.py", "*.rst", "*.md", "*.yaml", "*.txt", "*.yml", "*.lock", "*.toml", "*.ini", "Makefile"]
filter_files = true
known_first_party = "matrixctl"
known_third_party = [
    "pytest",
    "requests",
    "paramiko",
    "tabulate",
    "argcomplete",
    "coloredlogs",
    "sphinx_rtd_theme",
    "git",
    "toml",
]

[tool.flake8]
max-line-length = 79
# max-complexity = 12
ignore = "E501"
select = "C,E,F,W,B,B901"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
